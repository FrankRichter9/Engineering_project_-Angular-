[{"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\App.js":"2","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Header.js":"4","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Feed.js":"5","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Posts.js":"6","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Users.js":"7","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Post.js":"8","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\User.js":"9","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\services\\instaService.js":"10","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Profile.js":"11","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Palette.js":"12","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\context.js":"13","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\INST.js":"14","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Login.js":"15","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Registration.js":"16","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\AddPost.js":"17","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\GetProfile.js":"18","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\GetUserPalette.js":"19","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\EditProfile.js":"20"},{"size":222,"mtime":1608633642151,"results":"21","hashOfConfig":"22"},{"size":589,"mtime":1608904765295,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1804,"mtime":1608928421299,"results":"25","hashOfConfig":"22"},{"size":231,"mtime":1608637515896,"results":"26","hashOfConfig":"22"},{"size":3078,"mtime":1608942124068,"results":"27","hashOfConfig":"22"},{"size":2766,"mtime":1608942002388,"results":"28","hashOfConfig":"22"},{"size":740,"mtime":1608637334584,"results":"29","hashOfConfig":"22"},{"size":295,"mtime":1608637372296,"results":"30","hashOfConfig":"22"},{"size":3187,"mtime":1608941532099,"results":"31","hashOfConfig":"22"},{"size":3572,"mtime":1608938993319,"results":"32","hashOfConfig":"22"},{"size":1190,"mtime":1608929255034,"results":"33","hashOfConfig":"22"},{"size":74,"mtime":1608896486671,"results":"34","hashOfConfig":"22"},{"size":1547,"mtime":1608941897934,"results":"35","hashOfConfig":"22"},{"size":0,"mtime":1608919776198,"results":"36","hashOfConfig":"22"},{"size":1970,"mtime":1608941384590,"results":"37","hashOfConfig":"22"},{"size":1606,"mtime":1608979511307,"results":"38","hashOfConfig":"22"},{"size":2025,"mtime":1608934552580,"results":"39","hashOfConfig":"22"},{"size":1192,"mtime":1608934593652,"results":"40","hashOfConfig":"22"},{"size":2102,"mtime":1608980262560,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6lkq86",{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"44"},"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\index.js",[],["98","99"],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\App.js",["100","101","102","103","104","105","106","107","108","109"],"// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport Feed from './components/Feed';\nimport Profile from './components/Profile';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Context} from './components/context';\nimport Login from './components/Login';\nimport INST from './components/INST';\n\n\nfunction App() {\n\n  \n  const Login = false;\n\n  const UpdateLogin = () =>{\n    this.Login = !this.Login;\n    console.log('login updated');\n  }\n\n  return (\n   <INST />\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Header.js",[],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Feed.js",[],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Posts.js",["110","111","112","113"],"import React, {Component} from 'react';\r\nimport InstaService from '../services/instaService';\r\nimport User from './User';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Posts extends Component {\r\n\r\n    InstaService = new InstaService();\r\n    state = {\r\n        posts: [],\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePosts();\r\n    }\r\n\r\n    updatePosts() {\r\n        this.InstaService.getAllPosts()\r\n            .then(this.onPostsLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onPostsLoaded = (posts) => {\r\n        this.setState({\r\n            posts,\r\n            error: false\r\n        })\r\n        console.log(this.state.posts)\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n        \r\n    }\r\n\r\n    AdminDelete = (id, autorID) => {\r\n        if(localStorage.getItem('id') == 2 || localStorage.getItem('id') == autorID){\r\n            return(\r\n                <Link className=\"ProfileFunction\" onClick={() => this.DeleteThisPost(id)}>Удалить запись</Link>\r\n            )\r\n        }\r\n    }\r\n\r\n    DeleteThisPost(id){\r\n        this.InstaService.DeletePost(id)\r\n        .then(res => { \r\n            \r\n            this.setState({\r\n                login: res,\r\n                error: false\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.reverse().map(item => {\r\n            const {name, altname, autorSrc, src, alt, descr, id, autorName, autorID} = item;\r\n            let link = \"/GetProfile?id=\" + autorID;\r\n            if(localStorage.getItem('id') == autorID){\r\n                 link = \"/profile\";\r\n        }\r\n            return (\r\n                <div key={id} className=\"post\">\r\n                    <Link to={link}><User \r\n                        src={autorSrc}\r\n                        alt={altname}\r\n                        name={autorName}\r\n                        min /></Link>\r\n                <img src={src} alt={alt}></img>\r\n                <div className=\"post__name\">\r\n                    {name}\r\n                </div>\r\n                <div className=\"post__descr\">\r\n                    {descr}\r\n                </div>\r\n                <div>\r\n                    {this.AdminDelete(id, autorID)}\r\n                </div>\r\n            </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    renderAddPost() {\r\n        if(localStorage.getItem('Login') === 'true'){\r\n            return(\r\n                <Link to=\"/addpost\"><div className=\"addPost\">\r\n                    + add post\r\n                </div>\r\n                </Link>\r\n            )\r\n        }else {\r\n            return(\r\n                <div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {error, posts} = this.state;\r\n\r\n\r\n        const items = this.renderItems(posts);\r\n        return (\r\n            <div className=\"left\">\r\n                {this.renderAddPost()}\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Users.js",["114","115"],"import React, {Component} from 'react';\r\nimport User from './User';\r\nimport InstaService from '../services/instaService';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Users extends Component {\r\n\r\n        InstaService = new InstaService();\r\n\r\n        state = {\r\n            users: [],\r\n            error: false\r\n        };\r\n    \r\n        componentDidMount() {\r\n                this.updateUsers()\r\n        }\r\n        \r\n        \r\n    \r\n        updateUsers() {\r\n            this.InstaService.getAllUsers()\r\n                .then(this.onUsersLoaded)\r\n                .catch(this.onError);\r\n        }\r\n    \r\n        onUsersLoaded = (users) => {\r\n            this.setState({\r\n                users,\r\n                error: false\r\n            })\r\n            console.log(this.state.users)\r\n        }\r\n    \r\n        onError = (err) => {\r\n            this.setState({\r\n                error: true\r\n            })\r\n            \r\n        }\r\n    \r\n        renderUsers(arr) {\r\n            return arr.map(user => {\r\n                const {name, src, id} = user;\r\n                let link = \"/GetProfile?id=\" + id;\r\n                if(localStorage.getItem('id') == id){\r\n                         link = \"/profile\"\r\n                }\r\n                return (\r\n                        <Link to={link}><User \r\n                        src={src}\r\n                        alt=\"man\" \r\n                        name={name}\r\n                        min />\r\n                        </Link>\r\n                )\r\n            });\r\n        }\r\n        renderMyAccount() {\r\n                if(localStorage.getItem('Login') === 'true'){\r\n                        return(\r\n                                <Link to=\"/profile\"><User \r\n                                    src={localStorage.getItem('src')}\r\n                                    alt=\"man\" \r\n                                    name={localStorage.getItem('name')}/>\r\n                                    </Link>\r\n                        )\r\n                }else\r\n                        return(\r\n                                <div>\r\n                                        Вы не авторизованы\r\n                                </div>\r\n                                \r\n                        )\r\n        }\r\n        render(){\r\n\r\n                const {error, users} = this.state;\r\n\r\n                const AllUsers = this.renderUsers(users);\r\n                return (\r\n                        <div className=\"right\">\r\n                            {this.renderMyAccount()}\r\n                            <div className=\"users__block\">\r\n                            \r\n                            {AllUsers}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n        }\r\n    \r\n}","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Post.js",[],["116","117"],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\User.js",["118"],"import React from 'react';\r\n\r\nconst User = (props) => {\r\n    const {min, src, alt, name} = props;\r\n    return (\r\n        <a href=\"#\" className={min ? \"user min\" : \"user\"}>\r\n            <img src={src} alt={alt}></img>\r\n            <div>{name}</div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default User;","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\services\\instaService.js",["119"],"import axios from 'axios';\r\n\r\n\r\nexport default class instaService {\r\n    constructor() {\r\n        this._apiBase = 'http://localhost:3000';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fatch ${url} received ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllPosts = async () => {\r\n        const res = await this.getResource('/data/');\r\n        return res;\r\n    }\r\n\r\n    \r\n    getAllUsers = async () => {\r\n        const res = await this.getResource('/users/');\r\n        return res;\r\n    }\r\n\r\n    getAllPhotos = async () => {\r\n        const res = await this.getResource('/data/');\r\n        return res.map(this._transformPosts);\r\n    }\r\n\r\n    _transformPosts = (post) => {\r\n        return {\r\n            src: post.src,\r\n            alt: post.alt,\r\n            autorID: post.autorID\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    loginServer = async(login, password) => {\r\n        const res = await axios.post(`${this._apiBase}/login`, [login, password])\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            return res;\r\n    }\r\n\r\n    RegServer = async(name, inf, src, login, password) => {\r\n        const res = await axios.post(`${this._apiBase}/reg`, [name, inf, src, login, password])\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            return res;\r\n    }\r\n\r\n    AddPost = async(src, descr) => {\r\n        const res = await axios.post(`${this._apiBase}/add`, [localStorage.getItem('id'), src, descr, localStorage.getItem('name'), localStorage.getItem('src')])\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            return res;\r\n    }\r\n\r\n    GetProfile = async (id) => {\r\n        const res = await this.getResource('/users/');\r\n        return res.map(user => {\r\n            if(user.id === id)return user;\r\n        });\r\n    }\r\n\r\n    EditServer = async(id, name, inf, src) => {\r\n        const res = await axios.post(`${this._apiBase}/edit`, [id, name, inf, src])\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            return res;\r\n    }\r\n\r\n    DeleteProfile = async(id) => {\r\n        const res = await axios.post(`${this._apiBase}/delete`, [id])\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            return res;\r\n    }\r\n\r\n    DeletePost = async(id) => {\r\n        const res = await axios.post(`${this._apiBase}/deletePost`, [id])\r\n            .then(res => {\r\n                this.props.history.push('/')\r\n                return res.data\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            return res;\r\n    }\r\n\r\n}","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Profile.js",["120","121","122","123"],"import React, {Component, useContext} from 'react';\r\nimport User from './User';\r\nimport Palette from './Palette';\r\nimport InstaService from '../services/instaService';\r\nimport Login from './Login';\r\nimport {Context} from './context';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Profile extends Component{\r\n  \r\n    InstaService = new InstaService();\r\n    state = {\r\n        login: false,\r\n        error: false\r\n    }\r\n\r\n    \r\n    \r\n    loginMe = (props) => (e) => {\r\n        e.preventDefault()\r\n        const login =       e.target.elements.login.value;\r\n        const password =    e.target.elements.pass.value;\r\n        this.InstaService.loginServer(login, password)\r\n            .then(res => { console.log(res.status)\r\n                localStorage.setItem('Login', res.status);\r\n                localStorage.setItem('inf', res.inf);\r\n                localStorage.setItem('src', res.src);\r\n                localStorage.setItem('name', res.name);\r\n                localStorage.setItem('alt', res.alt);\r\n                localStorage.setItem('id', res.id);\r\n                \r\n                \r\n                this.setState({\r\n                    login: res.status,\r\n                    error: false\r\n                })\r\n                if(res)props.UpdateLogin();\r\n                this.render()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        \r\n    }\r\n\r\n    DeleteThisProfile = () => {\r\n        this.InstaService.DeleteProfile(localStorage.getItem('id'))\r\n        localStorage.setItem('Login', false);\r\n                localStorage.setItem('inf', undefined);\r\n                localStorage.setItem('src', undefined);\r\n                localStorage.setItem('name', undefined);\r\n                localStorage.setItem('alt', undefined);\r\n                localStorage.setItem('id', undefined);\r\n    }\r\n\r\n    // renderProfile(){\r\n        \r\n    // }\r\n    GetDelete = () => {\r\n        if(localStorage.getItem('id') == 2){\r\n            return(\r\n                <Link className=\"ProfileFunction yellow\">Данный профиль нельзя удалить</Link>\r\n            )\r\n        }else{\r\n            return(\r\n                <Link className=\"ProfileFunction\" onClick={this.DeleteThisProfile}>Удалить Профиль</Link>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n       \r\n        \r\n        return (this.state.login || localStorage.getItem('Login') === 'true' ?\r\n           \r\n                <div className=\"container profile\">\r\n                    <User \r\n                        src={localStorage.getItem('src')} \r\n                        alt={localStorage.getItem('alt')} \r\n                        name={localStorage.getItem('name')} />\r\n                        <p className=\"descr\">{localStorage.getItem('inf')}</p>\r\n                        <Link to=\"/editProfile\" className=\"ProfileFunction\">Редактировать Профиль</Link>\r\n                        {this.GetDelete()}\r\n                    <Palette />\r\n                </div>\r\n            :\r\n                <div className=\"form__login\">\r\n                    <form onSubmit={this.loginMe(this.props)}>\r\n                        <input type=\"text\" name=\"login\" placeholder=\"login\"></input>\r\n                        <input type=\"password\" name=\"pass\" placeholder=\"password\"></input>\r\n                        <button type=\"submit\" >Log in</button>\r\n                        <Link to=\"reg\"><button >Registration</button></Link>\r\n                    </form>\r\n                </div>\r\n            ) \r\n    }\r\n    \r\n}\r\n\r\n","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Palette.js",["124","125","126"],"import React, {Component} from 'react';\r\nimport InstaService from '../services/instaService';\r\n\r\nexport default class Palette extends Component {\r\n    InstaService = new InstaService();\r\n    state = {\r\n        error: false,\r\n        photos: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updatePhotos();\r\n    }\r\n\r\n    updatePhotos() {\r\n        this.InstaService.getAllPhotos()\r\n            .then(this.onPhotosLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onPhotosLoaded = (photos) => {\r\n        this.setState({\r\n            error: false,\r\n            photos\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map(item => {\r\n            const  {src, alt, autorID} = item;\r\n            if(autorID == localStorage.getItem('id'))\r\n            return (\r\n                <img src={src} alt={alt}></img>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const  {error, photos} = this.state;\r\n\r\n        const items = this.renderItems(photos)\r\n        return (\r\n            <div className=\"palette\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\context.js",[],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\INST.js",[],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Login.js",["127"],"const LOGIN = false;","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\Registration.js",["128","129","130","131","132","133"],"import React, {Component, useContext} from 'react';\r\nimport User from './User';\r\nimport Palette from './Palette';\r\nimport InstaService from '../services/instaService';\r\nimport Login from './Login';\r\nimport {Context} from './context';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Registration extends Component{\r\n  \r\n    InstaService = new InstaService();\r\n    state = {\r\n        reg: null,\r\n        error: false\r\n    }\r\n\r\n    RegMe = () => (e) => {\r\n        e.preventDefault()\r\n        const name =       e.target.elements.name.value;\r\n        const inf =       e.target.elements.inf.value;\r\n        const src =       e.target.elements.src.value;\r\n        const login =       e.target.elements.login.value;\r\n        const password =    e.target.elements.pass.value;\r\n\r\n        this.InstaService.RegServer(name, inf, src, login, password)\r\n            .then(res => { console.log(res.status)\r\n               \r\n                this.props.history.push('/')\r\n                this.setState({\r\n                    reg: res.status,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"form__reg\">\r\n                <form onSubmit={this.RegMe(this.props)}>\r\n                        <h1>{this.state.reg}</h1>\r\n                        <input type=\"text\" name=\"name\" placeholder=\"name\"></input>\r\n                        <input type=\"text\" name=\"inf\" placeholder=\"information\"></input>\r\n                        <input type=\"text\" name=\"src\" placeholder=\"profile photo src\"></input>\r\n                        <input type=\"text\" name=\"login\" placeholder=\"login\"></input>\r\n                        <input type=\"password\" name=\"pass\" placeholder=\"password\"></input>\r\n                        <button type=\"submit\" >Registration</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\AddPost.js",["134","135","136","137","138","139"],"import React, {Component, useContext} from 'react';\r\nimport User from './User';\r\nimport Palette from './Palette';\r\nimport InstaService from '../services/instaService';\r\nimport Login from './Login';\r\nimport {Context} from './context';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Registration extends Component{\r\n  \r\n    InstaService = new InstaService();\r\n    state = {\r\n        add: null,\r\n        error: false\r\n    }\r\n\r\n    AddPost = () => (e) => {\r\n        e.preventDefault()\r\n        const src =       e.target.elements.src.value;\r\n        const descr =       e.target.elements.descr.value;\r\n        \r\n\r\n        this.InstaService.AddPost(src, descr)\r\n            .then(res => { console.log(res.status)\r\n               \r\n                this.props.history.push('/')\r\n                this.setState({\r\n                   add: res.status,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"form__reg form__add\">\r\n                <form onSubmit={this.AddPost(this.props)}>\r\n                        <h1>{this.state.reg}</h1>\r\n                        <input type=\"text\" name=\"src\" placeholder=\"photo src\" className=\"AddPost__src\"></input>\r\n                        <textarea type=\"text\" name=\"descr\" placeholder=\"description\" className=\"AddPost__descr\" rows=\"8\"></textarea>\r\n                        <button type=\"submit\" >Add post</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\GetProfile.js",["140","141","142","143","144","145","146","147"],"import React, {Component, useContext} from 'react';\r\nimport User from './User';\r\nimport GetUserPalette from './GetUserPalette';\r\nimport InstaService from '../services/instaService';\r\nimport Login from './Login';\r\nimport {Context} from './context';\r\nimport {Link} from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\n\r\n\r\n\r\nexport default class GetProfile extends Component{\r\n  \r\n    InstaService = new InstaService();\r\n\r\n    state = {\r\n        users: [],\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n            this.updateUsers()\r\n    }\r\n    \r\n    \r\n\r\n    updateUsers() {\r\n        this.InstaService.getAllUsers()\r\n            .then(this.onUsersLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onUsersLoaded = (users) => {\r\n        this.setState({\r\n            users,\r\n            error: false\r\n        })\r\n        console.log(this.state.users)\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n        \r\n    }\r\n\r\n    renderUsers(arr, id) {\r\n        return arr.map(user => {\r\n            if(user.id == id){\r\n                console.log(user)\r\n                return (\r\n                    <div>\r\n                    \r\n                        <User \r\n                    src={user.src} \r\n                    alt={user.alt} \r\n                    name={user.name} />\r\n                    <p className=\"descr\">{user.inf}</p>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n            \r\n        });\r\n    }\r\n    \r\n\r\n    render(){\r\n        const {error, users} = this.state;\r\n        const get = queryString.parse(this.props.location.search)\r\n        const NeedProfile = this.renderUsers(users, get.id);\r\n        return(\r\n            \r\n                <div className=\"container profile\">\r\n                    \r\n                    {NeedProfile}\r\n                    <GetUserPalette id={get.id}/>\r\n                </div>\r\n           \r\n            ) \r\n    }\r\n    \r\n}\r\n\r\n","C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\GetUserPalette.js",["148","149","150"],"import React, {Component} from 'react';\r\nimport InstaService from '../services/instaService';\r\n\r\nexport default class GetUserPalette extends Component {\r\n    InstaService = new InstaService();\r\n    state = {\r\n        error: false,\r\n        photos: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updatePhotos();\r\n    }\r\n\r\n    updatePhotos() {\r\n        this.InstaService.getAllPhotos()\r\n            .then(this.onPhotosLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onPhotosLoaded = (photos) => {\r\n        this.setState({\r\n            error: false,\r\n            photos\r\n        })\r\n    }\r\n\r\n    renderItems(arr, id) {\r\n        return arr.map(item => {\r\n            const  {src, alt, autorID} = item;\r\n            if(autorID == id)\r\n            return (\r\n                <img src={src} alt={alt}></img>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const  {error, photos} = this.state;\r\n\r\n        const items = this.renderItems(photos, this.props.id)\r\n        return (\r\n            <div className=\"palette\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}",["151","152"],"C:\\Users\\Admin\\Documents\\GitHub\\Engineering_project_-Angular-\\inst\\src\\components\\EditProfile.js",["153","154","155","156","157","158"],"import React, {Component, useContext} from 'react';\r\nimport User from './User';\r\nimport Palette from './Palette';\r\nimport InstaService from '../services/instaService';\r\nimport Login from './Login';\r\nimport {Context} from './context';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class EditProfile extends Component{\r\n  \r\n    InstaService = new InstaService();\r\n    state = {\r\n        reg: null,\r\n        error: false\r\n    }\r\n\r\n    EditMe = () => (e) => {\r\n        e.preventDefault()\r\n        const name =       e.target.elements.name.value;\r\n        const inf =       e.target.elements.inf.value;\r\n        const src =       e.target.elements.src.value;\r\n        \r\n\r\n        this.InstaService.EditServer(localStorage.getItem('id'), name, inf, src)\r\n            .then(res => { console.log(res.status)\r\n               \r\n                this.props.history.push('/')\r\n                this.setState({\r\n                    reg: res.status,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            \r\n                localStorage.setItem('inf', inf);\r\n                localStorage.setItem('src', src);\r\n                localStorage.setItem('name', name);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"form__reg\">\r\n                <form onSubmit={this.EditMe(this.props)}>\r\n                        <h1>{this.state.reg}</h1>\r\n                        <input type=\"text\" name=\"name\" placeholder=\"name\" defaultValue={localStorage.getItem('name')}></input>\r\n                        <textarea type=\"text\" name=\"inf\" placeholder=\"information\" defaultValue={localStorage.getItem('inf')} className=\"EditProfile__descr\" rows=\"10\"></textarea>\r\n                        <textarea type=\"text\" name=\"src\" placeholder=\"profile photo src\" defaultValue={localStorage.getItem('src')} className=\"EditProfile__descr\" rows=\"5\"></textarea>\r\n                        <button type=\"submit\" >Изменить</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":17,"nodeType":"165","messageId":"166","endLine":2,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"168","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":12},{"ruleId":"163","severity":1,"message":"169","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":15},{"ruleId":"163","severity":1,"message":"170","line":6,"column":26,"nodeType":"165","messageId":"166","endLine":6,"endColumn":32},{"ruleId":"163","severity":1,"message":"171","line":6,"column":34,"nodeType":"165","messageId":"166","endLine":6,"endColumn":39},{"ruleId":"163","severity":1,"message":"172","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":16},{"ruleId":"163","severity":1,"message":"173","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":13},{"ruleId":"163","severity":1,"message":"174","line":15,"column":9,"nodeType":"165","messageId":"166","endLine":15,"endColumn":14},{"ruleId":"163","severity":1,"message":"175","line":17,"column":9,"nodeType":"165","messageId":"166","endLine":17,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":40,"column":39,"nodeType":"178","messageId":"179","endLine":40,"endColumn":41},{"ruleId":"176","severity":1,"message":"177","line":40,"column":74,"nodeType":"178","messageId":"179","endLine":40,"endColumn":76},{"ruleId":"176","severity":1,"message":"177","line":65,"column":43,"nodeType":"178","messageId":"179","endLine":65,"endColumn":45},{"ruleId":"163","severity":1,"message":"180","line":109,"column":16,"nodeType":"165","messageId":"166","endLine":109,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":46,"column":47,"nodeType":"178","messageId":"179","endLine":46,"endColumn":49},{"ruleId":"163","severity":1,"message":"180","line":78,"column":24,"nodeType":"165","messageId":"166","endLine":78,"endColumn":29},{"ruleId":"159","replacedBy":"181"},{"ruleId":"161","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":6,"column":9,"nodeType":"185","endLine":6,"endColumn":59},{"ruleId":"186","severity":1,"message":"187","line":83,"column":29,"nodeType":"188","messageId":"189","endLine":83,"endColumn":31},{"ruleId":"163","severity":1,"message":"190","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"173","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"172","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":62,"column":39,"nodeType":"178","messageId":"179","endLine":62,"endColumn":41},{"ruleId":"186","severity":1,"message":"187","line":35,"column":29,"nodeType":"188","messageId":"189","endLine":35,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":37,"column":24,"nodeType":"178","messageId":"179","endLine":37,"endColumn":26},{"ruleId":"163","severity":1,"message":"180","line":45,"column":17,"nodeType":"165","messageId":"166","endLine":45,"endColumn":22},{"ruleId":"163","severity":1,"message":"191","line":1,"column":7,"nodeType":"165","messageId":"166","endLine":1,"endColumn":12},{"ruleId":"163","severity":1,"message":"190","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"192","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":12},{"ruleId":"163","severity":1,"message":"193","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":15},{"ruleId":"163","severity":1,"message":"173","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"172","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"194","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"190","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"192","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":12},{"ruleId":"163","severity":1,"message":"193","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":15},{"ruleId":"163","severity":1,"message":"173","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"172","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"194","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"190","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"173","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"172","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"194","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"195","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":20},{"ruleId":"186","severity":1,"message":"187","line":51,"column":29,"nodeType":"188","messageId":"189","endLine":51,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":52,"column":24,"nodeType":"178","messageId":"179","endLine":52,"endColumn":26},{"ruleId":"163","severity":1,"message":"180","line":72,"column":16,"nodeType":"165","messageId":"166","endLine":72,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":35,"column":29,"nodeType":"188","messageId":"189","endLine":35,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":37,"column":24,"nodeType":"178","messageId":"179","endLine":37,"endColumn":26},{"ruleId":"163","severity":1,"message":"180","line":45,"column":17,"nodeType":"165","messageId":"166","endLine":45,"endColumn":22},{"ruleId":"159","replacedBy":"196"},{"ruleId":"161","replacedBy":"197"},{"ruleId":"163","severity":1,"message":"190","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"192","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":12},{"ruleId":"163","severity":1,"message":"193","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":15},{"ruleId":"163","severity":1,"message":"173","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":13},{"ruleId":"163","severity":1,"message":"172","line":6,"column":9,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"194","line":7,"column":9,"nodeType":"165","messageId":"166","endLine":7,"endColumn":13},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Feed' is defined but never used.","'Profile' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Context' is defined but never used.","'Login' is defined but never used.","'Login' is assigned a value but never used.","'UpdateLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.",["198"],["199"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useContext' is defined but never used.","'LOGIN' is assigned a value but never used.","'User' is defined but never used.","'Palette' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.",["198"],["199"],"no-global-assign","no-unsafe-negation"]